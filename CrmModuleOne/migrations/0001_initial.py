# Generated by Django 5.1.3 on 2025-02-10 10:55

import CrmModuleOne.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import image_cropping.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa szablonu')),
                ('document_type', models.CharField(choices=[('agreement', 'Umowy'), ('document', 'Dokumenty'), ('certificate', 'Zaświadczenia'), ('invoice', 'Faktury'), ('report', 'Raporty'), ('other', 'Inne')], max_length=50, verbose_name='Typ dokumentu')),
                ('file', models.FileField(upload_to='document_templates/', verbose_name='Plik szablonu')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ostatniej aktualizacji')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('placeholders', models.JSONField(blank=True, default=list, verbose_name='Lista placeholderów')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa kategorii')),
            ],
        ),
        migrations.CreateModel(
            name='SubsidyOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa opcji dotacyjnej')),
            ],
        ),
        migrations.CreateModel(
            name='SubsidyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa programu dotacyjnego')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indywidualne ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[A-Za-z]+$', 'Imię może zawierać tylko litery.')], verbose_name='Imię')),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[A-Za-z]+$', 'Nazwisko może zawierać tylko litery.')], verbose_name='Nazwisko')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[0-9\\s-]+$', "Numer telefonu może zawierać tylko cyfry, spacje, myślniki i opcjonalny znak '+'.")], verbose_name='Telefon')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data urodzenia')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ulica')),
                ('house_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numer domu')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Miejscowość')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Kod pocztowy')),
                ('postal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Poczta')),
                ('has_different_investment_address', models.BooleanField(default=False, verbose_name='Czy adres inwestycji różni się od adresu klienta?')),
                ('investment_street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ulica (adres inwestycji)')),
                ('investment_house_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numer domu (adres inwestycji)')),
                ('investment_postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Kod pocztowy (adres inwestycji)')),
                ('current_heating_source', models.CharField(blank=True, max_length=100, null=True, verbose_name='Aktualne źródło ogrzewania')),
                ('nip', models.CharField(blank=True, max_length=10, null=True, verbose_name='NIP')),
                ('pesel', models.CharField(blank=True, max_length=11, null=True, verbose_name='PESEL')),
                ('id_card_number', models.CharField(blank=True, max_length=9, null=True, verbose_name='Numer dowodu osobistego')),
                ('person_type', models.CharField(choices=[('individual', 'Osoba fizyczna'), ('business', 'Firma')], default='individual', max_length=20, verbose_name='Typ klienta')),
                ('agreement_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Numer umowy')),
                ('agreement_date', models.DateField(blank=True, null=True, verbose_name='Data zawarcia umowy')),
                ('income_threshold', models.CharField(choices=[('basic', 'Podstawowy'), ('elevated', 'Podwyższony'), ('highest', 'Najwyższy')], default='basic', max_length=10, verbose_name='Próg dochodowy')),
                ('household_members', models.IntegerField(blank=True, null=True, verbose_name='Ilość osób w gospodarstwie domowym')),
                ('farm_conversion_hectares', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0, message='Wartość nie może być mniejsza niż 0.'), django.core.validators.MaxValueValidator(200, message='Wartość nie może być większa niż 200.')], verbose_name='Ilość hektarów przeliczeniowych')),
                ('income_per_person', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Dochód na osobę')),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Kawaler/Panna'), ('married', 'Żonaty/Zamężna'), ('divorced', 'Rozwiedziony/Rozwiedziona'), ('widowed', 'Wdowiec/Wdowa')], max_length=50, null=True, verbose_name='Stan cywilny')),
                ('is_sole_owner', models.BooleanField(blank=True, default=False, null=True, verbose_name='Jedyny właściciel')),
                ('runs_business', models.BooleanField(blank=True, default=False, null=True, verbose_name='Czy prowadzi działalność gospodarczą')),
                ('has_joint_property', models.BooleanField(blank=True, default=False, null=True, verbose_name='Czy posiada wspólność majątkową z żoną')),
                ('business_at_investment_address', models.BooleanField(blank=True, default=False, null=True, verbose_name='Czy działalność prowadzona jest pod adresem inwestycji')),
                ('prefinancing', models.BooleanField(default=False, verbose_name='Prefinansowanie')),
                ('status', models.CharField(choices=[('lead', 'Lead'), ('offer', 'Oferta'), ('client', 'Klient')], default='lead', max_length=10, verbose_name='Status')),
                ('potential', models.CharField(choices=[('low', 'Niski'), ('medium', 'Średni'), ('high', 'Wysoki'), ('very_high', 'Bardzo wysoki')], default='low', max_length=10, verbose_name='Potencjał')),
                ('construction_permission_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800, message='Rok nie może być wcześniejszy niż 1800.'), django.core.validators.MaxValueValidator(2025, message='Rok nie może być późniejszy niż bieżący rok.')], verbose_name='Rok pozwolenia na budowę')),
                ('land_registry_number', models.CharField(blank=True, max_length=50, null=True, validators=[CrmModuleOne.models.validate_land_registry_number], verbose_name='Numer księgi wieczystej')),
                ('plot_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numer działki')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('milestone', models.CharField(choices=[('lead', 'Lead'), ('offer', 'Oferta'), ('agreement', 'Umowa'), ('prefinancing_request', 'Wniosek o prefinansowanie'), ('realization', 'Realizacja'), ('second_tranche_request', 'Wniosek o drugą transzę'), ('completed', 'Zakończono')], default='lead', max_length=50, verbose_name='Etap klienta')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to=settings.AUTH_USER_MODEL, verbose_name='Handlowiec')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('edit_client', 'Edytował/a dane klienta'), ('add_task', 'Dodał/a zadanie'), ('add_offer', 'Dodał/a ofertę'), ('add_meeting', 'Dodał/a spotkanie'), ('add_note', 'Dodał/a notatkę'), ('add_payment', 'Dodał/a płatność'), ('add_file', 'Dodał/a plik'), ('add_post', 'Dodał/a post informacyjny'), ('update_milestone', 'Zaktualizował/a kamień milowy'), ('generate_document', 'Wygenerował/a dokument'), ('generate_offer', 'Wygenerował/a ofertę'), ('mark_as_paid', 'Oznaczył/a jako opłacone'), ('add_offer_file', 'Dodał/a plik do oferty')], max_length=20, verbose_name='Typ akcji')),
                ('description', models.TextField(verbose_name='Opis zmiany')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data i czas')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik wykonujący akcję')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='CrmModuleOne.client', verbose_name='Powiązany klient')),
            ],
        ),
        migrations.CreateModel(
            name='InformationPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tytuł')),
                ('content', models.TextField(verbose_name='Treść')),
                ('image', models.ImageField(blank=True, null=True, upload_to='information_posts/', verbose_name='Zdjęcie')),
                ('cropping', image_cropping.fields.ImageRatioField('image', '16x9', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='cropping')),
                ('mandatory_to_acknowledge', models.BooleanField(default=False, verbose_name='Wymaga potwierdzenia zapoznania')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
                ('acknowledged_by', models.ManyToManyField(blank=True, related_name='acknowledged_posts', to=settings.AUTH_USER_MODEL, verbose_name='Potwierdzono przez')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Opis')),
                ('meeting_date', models.DateTimeField(verbose_name='Data spotkania')),
                ('occurred', models.BooleanField(default=False, verbose_name='Czy spotkanie się odbyło?')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notatka')),
                ('note_added_at', models.DateTimeField(blank=True, null=True, verbose_name='Data dodania notatki')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='CrmModuleOne.client')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Notatka')),
                ('added_date', models.DateTimeField(auto_now_add=True, verbose_name='Data dodania')),
                ('is_important', models.BooleanField(default=False, verbose_name='Ważna notatka')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='CrmModuleOne.client')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('critical', 'Krytyczne'), ('info', 'Informacja'), ('warning', 'Ostrzeżenie')], default='info', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('message', models.TextField()),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('status', models.CharField(choices=[('draft', 'Szkic'), ('sent', 'Wysłana'), ('accepted', 'Zaakceptowana'), ('rejected', 'Odrzucona')], default='draft', max_length=20, verbose_name='Status oferty')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Całkowita kwota')),
                ('must_payment', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Kwota do zapłaty')),
                ('additional_terms', models.TextField(blank=True, null=True, verbose_name='Dodatkowe ustalenia')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='CrmModuleOne.client', verbose_name='Klient')),
            ],
        ),
        migrations.CreateModel(
            name='ClientFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('agreement', 'Umowy'), ('document', 'Dokumenty'), ('certificate', 'Zaświadczenia'), ('photo', 'Zdjęcia'), ('offer', 'Oferty'), ('invoice', 'Faktury'), ('report', 'Raporty'), ('other', 'Inne')], default='other', max_length=50, verbose_name='Typ pliku')),
                ('file', models.FileField(upload_to=CrmModuleOne.models.client_file_path, verbose_name='Plik')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Data przesłania')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis pliku')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='CrmModuleOne.client', verbose_name='Klient')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='CrmModuleOne.offer', verbose_name='Powiązana oferta')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('client', 'Klient'), ('bank', 'Bank'), ('fund', 'Fundusz')], max_length=50, verbose_name='Rodzaj płatności')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Kwota')),
                ('due_date', models.DateField(verbose_name='Termin płatności')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data zapłaty')),
                ('status', models.CharField(choices=[('pending', 'Oczekująca'), ('paid', 'Opłacona'), ('overdue', 'Zaległa')], default='pending', max_length=10, verbose_name='Status płatności')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notatka')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='CrmModuleOne.client')),
                ('invoice_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='CrmModuleOne.clientfile', verbose_name='Faktura')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa produktu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis produktu')),
                ('unit', models.CharField(choices=[('szt', 'Sztuka'), ('m2', 'Metr kwadratowy')], default='szt', max_length=3, verbose_name='Jednostka')),
                ('required_documents', models.ManyToManyField(blank=True, related_name='products', to='CrmModuleOne.documenttemplate', verbose_name='Wymagane dokumenty')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='CrmModuleOne.productcategory', verbose_name='Kategoria')),
            ],
        ),
        migrations.CreateModel(
            name='OfferProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Ilość')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena jednostkowa')),
                ('vat_rate', models.PositiveIntegerField(default=23, verbose_name='Stawka VAT')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='CrmModuleOne.offer', verbose_name='Oferta')),
                ('required_documents', models.ManyToManyField(blank=True, to='CrmModuleOne.documenttemplate', verbose_name='Wymagane dokumenty')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CrmModuleOne.product', verbose_name='Produkt')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa atrybutu')),
                ('input_type', models.CharField(choices=[('text', 'Pole tekstowe'), ('dropdown', 'Lista rozwijana')], default='text', max_length=20, verbose_name='Typ wejścia')),
                ('placeholder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Placeholder')),
                ('options', models.TextField(blank=True, help_text='Opcje dla listy rozwijanej, oddzielone przecinkami', null=True, verbose_name='Opcje')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cena atrybutu')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='CrmModuleOne.product', verbose_name='Produkt')),
            ],
        ),
        migrations.CreateModel(
            name='ProductConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributes', models.TextField(verbose_name='Atrybuty konfiguracji')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='Jednostka (np. zł/szt.)')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='CrmModuleOne.product', verbose_name='Produkt')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Zdjęcie profilowe')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Imię')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nazwisko')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numer telefonu')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('current_contract_number', models.CharField(blank=True, default='1', max_length=1000, null=True, verbose_name='Aktualny numer umowy')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubsidyProductCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_subsidy_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maksymalna kwota dofinansowania')),
                ('max_subsidy_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Maksymalny procent dofinansowania')),
                ('second_max_subsidy_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maksymalna kwota drugiego dofinansowania')),
                ('second_max_subsidy_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Maksymalny procent drugiego dofinansowania')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_criteria', to='CrmModuleOne.subsidyoption', verbose_name='Opcja dotacyjna')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsidy_criteria', to='CrmModuleOne.product', verbose_name='Produkt')),
            ],
        ),
        migrations.AddField(
            model_name='subsidyoption',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='CrmModuleOne.subsidyprogram', verbose_name='Program dotacyjny'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Treść zadania')),
                ('added_date', models.DateTimeField(auto_now_add=True, verbose_name='Data dodania')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Termin realizacji')),
                ('completed', models.BooleanField(default=False, verbose_name='Czy ukończone')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Data ukończenia')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='CrmModuleOne.client')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDocumentRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_placeholders', models.JSONField(default=list, verbose_name='Wymagane placeholdery')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_requirements', to='CrmModuleOne.documenttemplate')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_requirements', to='CrmModuleOne.product')),
            ],
            options={
                'unique_together': {('product', 'document')},
            },
        ),
    ]
